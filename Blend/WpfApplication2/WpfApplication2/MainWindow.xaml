<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
	x:Class="WpfApplication2.MainWindow"
	x:Name="Window"
	Title="MainWindow"
	Width="640" Height="480">

	<Window.Resources>
		<SolidColorBrush x:Key="CheckBoxFillNormal" Color="#F4F4F4"/>
		<SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>
		<Style x:Key="EmptyCheckBoxFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="CheckRadioFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="{x:Type CheckBox}" x:Key="MySplCheckBox">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
			<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="0.5*"/>
								<ColumnDefinition Width="0.5*"/>
							</Grid.ColumnDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="FocusStates" ei:ExtendedVisualStateManager.UseFluidLayout="True">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.5"/>
									</VisualStateGroup.Transitions>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CheckStates" ei:ExtendedVisualStateManager.UseFluidLayout="True">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.5">
											<VisualTransition.GeneratedEasingFunction>
												<CubicEase EasingMode="EaseInOut"/>
											</VisualTransition.GeneratedEasingFunction>
										</VisualTransition>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Checked">
										<Storyboard>
											<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="border">
												<EasingInt32KeyFrame KeyTime="0" Value="2"/>
											</Int32AnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unchecked"/>
									<VisualState x:Name="Indeterminate"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<VisualStateManager.CustomVisualStateManager>
								<ei:ExtendedVisualStateManager/>
							</VisualStateManager.CustomVisualStateManager>
							<Grid Margin="0" Grid.Column="0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="0.35*"/>
									<ColumnDefinition Width="0.3*"/>
									<ColumnDefinition Width="0.35*"/>
								</Grid.ColumnDefinitions>
								<Border BorderBrush="Black" BorderThickness="1" Grid.ColumnSpan="3" Background="#FFF1A9A9"/>
								<Border x:Name="border" BorderBrush="Black" BorderThickness="2" Background="#FFE70505"/>
							</Grid>
							<ContentPresenter Margin="0" Grid.Column="1" VerticalAlignment="Center"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="HasContent" Value="true">
								<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
								<Setter Property="Padding" Value="4,0,0,0"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Storyboard x:Key="Storyboard1">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ellipse">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:1" Value="352"/>
				<EasingDoubleKeyFrame KeyTime="0:0:2" Value="12"/>
				<EasingDoubleKeyFrame KeyTime="0:0:2.9" Value="451"/>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="ellipse">
				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
				<EasingDoubleKeyFrame KeyTime="0:0:1" Value="278"/>
				<EasingDoubleKeyFrame KeyTime="0:0:2" Value="302"/>
				<EasingDoubleKeyFrame KeyTime="0:0:2.9" Value="19"/>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
	</Window.Resources>
	<Window.Triggers>
		<EventTrigger RoutedEvent="ButtonBase.Click" SourceName="button">
			<BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
		</EventTrigger>
	</Window.Triggers>

	<Grid x:Name="LayoutRoot">
		<CheckBox Content="CheckBox" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="79.25,95,0,0" Width="110.42" Height="29" Style="{StaticResource MySplCheckBox}" />
        <CheckBox Content="CheckBox" Height="43" HorizontalAlignment="Left" Margin="311,60,0,0" x:Name="checkBox1" VerticalAlignment="Top" Width="132" />
        <Ellipse x:Name="ellipse" Fill="#FF5B5BC8" HorizontalAlignment="Left" Margin="54,8,0,0" Stroke="#FF1F1C1C" Width="112" StrokeThickness="5" Height="103" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
        	<Ellipse.RenderTransform>
        		<TransformGroup>
        			<ScaleTransform/>
        			<SkewTransform/>
        			<RotateTransform/>
        			<TranslateTransform/>
        		</TransformGroup>
        	</Ellipse.RenderTransform>
        </Ellipse>
        <Button x:Name="button" Content="Button" HorizontalAlignment="Left" Width="75" Margin="114.67,212,0,208.04" d:LayoutOverrides="Height"/>
    </Grid>
</Window>